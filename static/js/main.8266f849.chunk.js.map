{"version":3,"sources":["nbalivestats/logos/76ers.png","nbalivestats/logos/blazers.png","nbalivestats/logos/bucks.png","nbalivestats/logos/bulls.png","nbalivestats/logos/cavs.png","nbalivestats/logos/celtics.png","nbalivestats/logos/clippers.png","nbalivestats/logos/grizzlies.png","nbalivestats/logos/hawks.png","nbalivestats/logos/heat.png","nbalivestats/logos/hornets.png","nbalivestats/logos/jazz.png","nbalivestats/logos/kings.png","nbalivestats/logos/knicks.png","nbalivestats/logos/lakers.png","nbalivestats/logos/magic.png","nbalivestats/logos/mavs.png","nbalivestats/logos/nets.png","nbalivestats/logos/nuggets.png","nbalivestats/logos/pacers.png","nbalivestats/logos/pelicans.png","nbalivestats/logos/pistons.png","nbalivestats/logos/raptors.png","nbalivestats/logos/rockets.png","nbalivestats/logos/spurs.png","nbalivestats/logos/suns.png","nbalivestats/logos/thunder.png","nbalivestats/logos/warriors.png","nbalivestats/logos/wizards.png","nbalivestats/logos/wolves.png","nbalivestats/PlayerStats.jsx","nbalivestats/logoSelector.js","nbalivestats/GameStats.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","PlayerStats","p","retrievePlayerId","axios","get","state","playerName","then","a","response","data","length","alert","undefined","retrievePlayerStats","id","catch","e","console","log","playerId","setState","playerStats","submitHandler","preventDefault","changeHandler","name","target","value","split","join","style","float","onSubmit","this","type","onChange","placeholder","className","tableLayout","React","Component","selectLogo","team","hawks","celtics","nets","hornets","bulls","cavs","mavs","nuggets","pistons","warriors","rockets","pacers","clippers","lakers","grizzlies","heat","bucks","wolves","pelicans","knicks","thunder","magic","sixers","suns","blazers","kings","spurs","raptors","jazz","wizards","GameStats","retrieveGames","date","Games","sortGames","today","Date","now","dateFormat","gamelist","sort","b","keyA","keyB","allGames","map","game","idx","key","src","home_team","abbreviation","width","height","alt","textAlign","home_team_score","time","visitor_team","visitor_team_score","status","clear","marginBottom","marginRight","App","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"8GAAAA,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,uC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,mC,gBCA3CD,EAAOC,QAAU,IAA0B,kC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,sC,gBCA3CD,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,kSCqG5BC,E,YAhGX,WAAYC,GAAG,IAAD,8BACV,4CAAMA,KAOVC,iBAAmB,WACfC,IAAMC,IAAN,2DAA8D,EAAKC,MAAMC,aACxEC,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,sDACCC,EAASC,KAAKA,KAAKC,OAAS,EAC3BC,MAAM,+CACyBC,IAA1BJ,EAASC,KAAKA,KAAK,GACxBE,MAAM,2CAEN,EAAKE,oBAAoBL,EAASC,KAAKA,KAAK,GAAGK,IANjD,2CADN,uDASGC,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAnBN,EAuBdH,oBAAsB,SAACM,GACnBjB,IAAMC,IAAN,qFAAwFgB,IACvFb,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,2DAC2BK,IAA1BJ,EAASC,KAAKA,KAAK,GAClBE,MAAM,2CAEN,EAAKS,SAAS,CAACC,YAAab,EAASC,KAAKA,KAAK,KAJjD,2CADN,uDAOGM,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAhCN,EAoCdM,cAAgB,SAACN,GACbA,EAAEO,iBACW,EAAKnB,MAAMC,WAChBK,OAAS,EACbC,MAAM,uBAEN,EAAKV,oBA1CC,EA8CduB,cAAgB,SAACR,GACb,IAAMS,EAAOT,EAAEU,OAAOC,MAAMC,MAAM,KAAKC,KAAK,KAC5C,EAAKT,SAAS,CAACf,WAAYoB,KA9C3B,EAAKrB,MAAQ,CACTiB,YAAa,GACbhB,WAAY,MAJN,E,sEAoDV,OACI,6BACI,yBAAKyB,MAAO,CAACC,MAAO,SAChB,gEACA,0BAAMC,SAAYC,KAAKX,eACnB,2BAAOY,KAAO,OAAOC,SAAYF,KAAKT,cAAeY,YAAc,6BACnE,2BAAOF,KAAO,SAASP,MAAM,aAGrC,6BACI,2BAAOU,UAAY,aAAaP,MAAS,CAACQ,YAAa,UACnD,+BACI,4BACI,kCACA,mCACA,mCACA,mCACA,kCACA,kCACA,kCACA,mCACA,mCACA,mCAEJ,4BACI,4BAAKL,KAAK7B,MAAMiB,YAAX,cACL,4BAAKY,KAAK7B,MAAMiB,YAAX,KACL,4BAAKY,KAAK7B,MAAMiB,YAAX,KACL,4BAAKY,KAAK7B,MAAMiB,YAAX,KACL,4BAAKY,KAAK7B,MAAMiB,YAAX,QACL,4BAAKY,KAAK7B,MAAMiB,YAAX,SACL,4BAAKY,KAAK7B,MAAMiB,YAAX,QACL,4BAAKY,KAAK7B,MAAMiB,YAAX,KACL,4BAAKY,KAAK7B,MAAMiB,YAAX,KACL,4BAAKY,KAAK7B,MAAMiB,YAAX,mB,GAvFXkB,IAAMC,W,8jBC2BjB,SAASC,GAAWC,GAC/B,OAAOA,GACH,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,KACX,IAAK,MACD,OAAOC,IACX,IAAK,MACD,OAAOC,KACX,QACI,OAAO,M,ICFJC,G,YArFX,WAAYzE,GAAG,IAAD,uBACV,4CAAMA,KASV0E,cAAgB,WACZxE,IAAMC,IAAN,6DAAgE,EAAKC,MAAMuE,KAA3E,qBAA4F,EAAKvE,MAAMuE,OACtGrE,KADD,+BAAAC,EAAA,MACM,WAAMC,GAAN,SAAAD,EAAA,sDACF,EAAKa,SAAS,CAACwD,MAAOpE,EAASC,KAAKA,OACpC,EAAKoE,YAFH,2CADN,uDAIG9D,OAAM,SAAAC,GACLC,QAAQC,IAAIF,OAdhB,IAAM8D,EAAQC,KAAKC,MACfL,EAAOM,IAAWH,EAAO,cAHnB,OAIV,EAAK1E,MAAQ,CACTwE,MAAO,GACPD,KAAMA,GANA,E,yEAqBV,IAAIO,EAAWjD,KAAK7B,MAAMwE,MAC1BM,EAASC,MAAK,SAAS5E,EAAG6E,GACtB,IAAIC,EAAO9E,EAAEO,GAAIwE,EAAOF,EAAEtE,GAC1B,OAAGuE,EAAOC,GAAc,EACrBD,EAAOC,EAAa,EAChB,KAEXrD,KAAKb,SAAS,CAACwD,MAAOM,M,+BAItB,IACIK,EADQtD,KAAK7B,MAAMwE,MACFY,KAAI,SAACC,EAAMC,GAAP,OACzB,yBAAKrD,UAAU,YAAYsD,IAAOD,GAC9B,+BACI,+BACI,4BACI,4BACI,yBAAKE,IAAKnD,GAAWgD,EAAKI,UAAUC,cAAeC,MAAM,KAAKC,OAAS,KAAKC,IAAI,MAEpF,wBAAInE,MAAO,CAACiE,MAAO,MAAOG,UAAW,SAChCT,EAAKI,UAAUC,cAEpB,4BACKL,EAAKU,iBAEV,wBAAIrE,MAAO,CAACiE,MAAO,OAAQG,UAAW,UACjCT,EAAKW,OAGd,4BACI,4BACI,yBAAKR,IAAKnD,GAAWgD,EAAKY,aAAaP,cAAeC,MAAM,KAAKC,OAAS,KAAKC,IAAI,MAEvF,wBAAInE,MAAO,CAACiE,MAAO,MAAOG,UAAW,SAChCT,EAAKY,aAAaP,cAEvB,4BACKL,EAAKa,oBAEV,wBAAIxE,MAAO,CAACiE,MAAO,OAAQG,UAAW,UACjCT,EAAKc,eAOpBzB,EAAQC,KAAKC,MACfL,EAAOM,IAAWH,EAAO,oBAC7B,OACI,6BACI,yBAAKhD,MAAO,CAAC0E,MAAO,QAASC,aAAc,OAAQC,YAAa,UAC5D,iDAAuB/B,EAAvB,MAEJ,6BAAMY,M,0CAMdtD,KAAKyC,oB,GAnFWnC,IAAMC,W,MCYfmE,OAbf,WACE,OACE,yBAAKtE,UAAU,OACb,yBAAKP,MAAS,CAAC2E,aAAc,UAC3B,kBAAC,EAAD,OAEF,6BACE,kBAAC,GAAD,SCAYG,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,GAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBjH,MAAK,SAAAkH,GACJA,EAAaC,gBAEd1G,OAAM,SAAA2G,GACLzG,QAAQyG,MAAMA,EAAMC,e","file":"static/js/main.8266f849.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/76ers.04457bc5.png\";","module.exports = __webpack_public_path__ + \"static/media/blazers.ac3c9832.png\";","module.exports = __webpack_public_path__ + \"static/media/bucks.6daa5165.png\";","module.exports = __webpack_public_path__ + \"static/media/bulls.319eb011.png\";","module.exports = __webpack_public_path__ + \"static/media/cavs.bb4f4351.png\";","module.exports = __webpack_public_path__ + \"static/media/celtics.a134ea00.png\";","module.exports = __webpack_public_path__ + \"static/media/clippers.71d9d1f1.png\";","module.exports = __webpack_public_path__ + \"static/media/grizzlies.2a750344.png\";","module.exports = __webpack_public_path__ + \"static/media/hawks.e1b34c6d.png\";","module.exports = __webpack_public_path__ + \"static/media/heat.f907ade6.png\";","module.exports = __webpack_public_path__ + \"static/media/hornets.c27c1fdc.png\";","module.exports = __webpack_public_path__ + \"static/media/jazz.cffb2e54.png\";","module.exports = __webpack_public_path__ + \"static/media/kings.989bba2e.png\";","module.exports = __webpack_public_path__ + \"static/media/knicks.a35202fc.png\";","module.exports = __webpack_public_path__ + \"static/media/lakers.f27bcbfb.png\";","module.exports = __webpack_public_path__ + \"static/media/magic.3e14f480.png\";","module.exports = __webpack_public_path__ + \"static/media/mavs.f0614f58.png\";","module.exports = __webpack_public_path__ + \"static/media/nets.8066ebc3.png\";","module.exports = __webpack_public_path__ + \"static/media/nuggets.f4271221.png\";","module.exports = __webpack_public_path__ + \"static/media/pacers.9629bff9.png\";","module.exports = __webpack_public_path__ + \"static/media/pelicans.cf662019.png\";","module.exports = __webpack_public_path__ + \"static/media/pistons.129b7012.png\";","module.exports = __webpack_public_path__ + \"static/media/raptors.5e76e465.png\";","module.exports = __webpack_public_path__ + \"static/media/rockets.8257a19b.png\";","module.exports = __webpack_public_path__ + \"static/media/spurs.7dbb30c6.png\";","module.exports = __webpack_public_path__ + \"static/media/suns.300133ca.png\";","module.exports = __webpack_public_path__ + \"static/media/thunder.ab526cf3.png\";","module.exports = __webpack_public_path__ + \"static/media/warriors.3756195b.png\";","module.exports = __webpack_public_path__ + \"static/media/wizards.7f8d02d0.png\";","module.exports = __webpack_public_path__ + \"static/media/wolves.05a94683.png\";","import React from 'react';\r\nimport './PlayerStats.css';\r\nimport axios from \"axios\";\r\n\r\nclass PlayerStats extends React.Component{\r\n    constructor(p){\r\n        super(p);\r\n        this.state = { \r\n            playerStats: {},\r\n            playerName: null\r\n        };\r\n    }\r\n\r\n    retrievePlayerId = () => {\r\n        axios.get(`https://www.balldontlie.io/api/v1/players?search=${this.state.playerName}`)\r\n        .then(async response => {\r\n            if(response.data.data.length > 1){\r\n                alert(\"Please be more specific with the name.\")\r\n            }else if(response.data.data[0] === undefined){\r\n                alert(\"This player has not played this season.\")\r\n            }else{\r\n                this.retrievePlayerStats(response.data.data[0].id)\r\n            }\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    retrievePlayerStats = (playerId) => {\r\n        axios.get(`https://www.balldontlie.io/api/v1/season_averages?season=2019&player_ids[]=${playerId}`)\r\n        .then(async response => {\r\n            if(response.data.data[0] === undefined){\r\n                alert(\"This player has not played this season.\")\r\n            }else{\r\n                this.setState({playerStats: response.data.data[0]})\r\n            }\r\n        }).catch(e => {\r\n            console.log(e)\r\n        })\r\n    }\r\n\r\n    submitHandler = (e) => {\r\n        e.preventDefault();\r\n        const name = this.state.playerName;\r\n        if(name.length < 1){\r\n            alert(\"Enter a valid name.\");\r\n        }else{\r\n            this.retrievePlayerId();\r\n        }\r\n    }\r\n\r\n    changeHandler = (e) => {\r\n        const name = e.target.value.split(\" \").join(\"_\");\r\n        this.setState({playerName: name}); \r\n    }\r\n\r\n    render(){\r\n        return (\r\n            <div>\r\n                <div style={{float: \"left\"}}>\r\n                    <label>SEASON STATS (2019, Per Game)</label>\r\n                    <form onSubmit = {this.submitHandler}>\r\n                        <input type = \"text\" onChange = {this.changeHandler} placeholder = \"Enter an NBA player name\"/>                      \r\n                        <input type = \"submit\" value=\"Submit\"/>\r\n                    </form>\r\n                </div>  \r\n                <div>  \r\n                    <table className = \"statstable\" style = {{tableLayout: \"fixed\"}}>\r\n                        <tbody>\r\n                            <tr>\r\n                                <th>GP</th>\r\n                                <th>PTS</th>\r\n                                <th>AST</th>\r\n                                <th>REB</th>\r\n                                <th>FG</th>\r\n                                <th>3P</th>\r\n                                <th>FT</th>\r\n                                <th>STL</th>\r\n                                <th>BLK</th>\r\n                                <th>TO</th>\r\n                            </tr>\r\n                            <tr>\r\n                                <td>{this.state.playerStats[\"games_played\"]}</td>\r\n                                <td>{this.state.playerStats[\"pts\"]}</td>\r\n                                <td>{this.state.playerStats[\"ast\"]}</td>\r\n                                <td>{this.state.playerStats[\"reb\"]}</td>\r\n                                <td>{this.state.playerStats[\"fg_pct\"]}</td>\r\n                                <td>{this.state.playerStats[\"fg3_pct\"]}</td>\r\n                                <td>{this.state.playerStats[\"ft_pct\"]}</td>\r\n                                <td>{this.state.playerStats[\"stl\"]}</td>\r\n                                <td>{this.state.playerStats[\"blk\"]}</td>\r\n                                <td>{this.state.playerStats[\"turnover\"]}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default PlayerStats;","import sixers from \"./logos/76ers.png\";\r\nimport blazers from \"./logos/blazers.png\";\r\nimport bucks from \"./logos/bucks.png\";\r\nimport bulls from \"./logos/bulls.png\";\r\nimport cavs from \"./logos/cavs.png\";\r\nimport celtics from \"./logos/celtics.png\";\r\nimport clippers from \"./logos/clippers.png\";\r\nimport grizzlies from \"./logos/grizzlies.png\";\r\nimport hawks from \"./logos/hawks.png\";\r\nimport heat from \"./logos/heat.png\";\r\nimport hornets from \"./logos/hornets.png\";\r\nimport jazz from \"./logos/jazz.png\";\r\nimport kings from \"./logos/kings.png\";\r\nimport knicks from \"./logos/knicks.png\";\r\nimport lakers from \"./logos/lakers.png\";\r\nimport magic from \"./logos/magic.png\";\r\nimport mavs from \"./logos/mavs.png\";\r\nimport nets from \"./logos/nets.png\";\r\nimport nuggets from \"./logos/nuggets.png\";\r\nimport pacers from \"./logos/pacers.png\";\r\nimport pelicans from \"./logos/pelicans.png\";\r\nimport pistons from \"./logos/pistons.png\";\r\nimport raptors from \"./logos/raptors.png\";\r\nimport rockets from \"./logos/rockets.png\";\r\nimport spurs from \"./logos/spurs.png\";\r\nimport suns from \"./logos/suns.png\";\r\nimport thunder from \"./logos/thunder.png\";\r\nimport warriors from \"./logos/warriors.png\";\r\nimport wizards from \"./logos/wizards.png\";\r\nimport wolves from \"./logos/wolves.png\";\r\n\r\nexport default function selectLogo(team){\r\n    switch(team){\r\n        case \"ATL\":\r\n            return hawks;\r\n        case \"BOS\":\r\n            return celtics;\r\n        case \"BKN\":\r\n            return nets;\r\n        case \"CHA\":\r\n            return hornets;\r\n        case \"CHI\":\r\n            return bulls;\r\n        case \"CLE\":\r\n            return cavs;\r\n        case \"DAL\":\r\n            return mavs;\r\n        case \"DEN\":\r\n            return nuggets;    \r\n        case \"DET\":\r\n            return pistons;\r\n        case \"GSW\":\r\n            return warriors;\r\n        case \"HOU\":\r\n            return rockets;\r\n        case \"IND\":\r\n            return pacers;\r\n        case \"LAC\":\r\n            return clippers;\r\n        case \"LAL\":\r\n            return lakers;\r\n        case \"MEM\":\r\n            return grizzlies;\r\n        case \"MIA\":\r\n            return heat;\r\n        case \"MIL\":\r\n            return bucks;\r\n        case \"MIN\":\r\n            return wolves;\r\n        case \"NOP\":\r\n            return pelicans;\r\n        case \"NYK\":\r\n            return knicks;      \r\n        case \"OKC\":\r\n            return thunder;\r\n        case \"ORL\":\r\n            return magic;  \r\n        case \"PHI\":\r\n            return sixers;\r\n        case \"PHX\":\r\n            return suns;  \r\n        case \"POR\":\r\n            return blazers;\r\n        case \"SAC\":\r\n            return kings;       \r\n        case \"SAS\":\r\n            return spurs;\r\n        case \"TOR\":\r\n            return raptors;  \r\n        case \"UTA\":\r\n            return jazz;\r\n        case \"WAS\":\r\n            return wizards;  \r\n        default:\r\n            return null;                                                 \r\n    }\r\n};","import React from 'react';\r\nimport './GameStats.css';\r\nimport axios from \"axios\";\r\nimport dateFormat from \"dateformat\";\r\nimport selectLogo from \"./logoSelector.js\";\r\n\r\nclass GameStats extends React.Component{\r\n    constructor(p){\r\n        super(p);\r\n        const today = Date.now();\r\n        var date = dateFormat(today, \"yyyy-mm-dd\");\r\n        this.state = { \r\n            Games: [],\r\n            date: date\r\n        };\r\n    }\r\n\r\n    retrieveGames = () => {\r\n        axios.get(`https://www.balldontlie.io/api/v1/games?start_date=${this.state.date}&end_date=${this.state.date}`)\r\n        .then(async response => {\r\n            this.setState({Games: response.data.data})\r\n            this.sortGames()\r\n        }).catch(e => {\r\n            console.log(e);\r\n        })\r\n    }\r\n\r\n    sortGames(){\r\n        var gamelist = this.state.Games;\r\n        gamelist.sort(function(a, b){\r\n            var keyA = a.id, keyB = b.id;\r\n            if(keyA < keyB) return -1;\r\n            if(keyA > keyB) return 1;\r\n            return 0;\r\n        });\r\n        this.setState({Games: gamelist});\r\n    }\r\n\r\n    render(){\r\n        let games = this.state.Games;\r\n        let allGames = games.map((game, idx) =>\r\n        <div className=\"container\" key = {idx}>\r\n            <table>\r\n                <tbody>\r\n                    <tr>\r\n                        <td>\r\n                            <img src={selectLogo(game.home_team.abbreviation)} width=\"25\" height = \"25\" alt=\"\"/>              \r\n                        </td>\r\n                        <td style={{width: \"25%\", textAlign: \"left\"}}>\r\n                            {game.home_team.abbreviation}              \r\n                        </td>\r\n                        <td>\r\n                            {game.home_team_score}              \r\n                        </td>\r\n                        <td style={{width: \"100%\", textAlign: \"right\"}}>\r\n                            {game.time}              \r\n                        </td>\r\n                    </tr>\r\n                    <tr>\r\n                        <td>\r\n                            <img src={selectLogo(game.visitor_team.abbreviation)} width=\"25\" height = \"25\" alt=\"\"/>              \r\n                        </td>\r\n                        <td style={{width: \"25%\", textAlign: \"left\"}}>\r\n                            {game.visitor_team.abbreviation}              \r\n                        </td>\r\n                        <td>\r\n                            {game.visitor_team_score}              \r\n                        </td>\r\n                        <td style={{width: \"100%\", textAlign: \"right\"}}>\r\n                            {game.status}\r\n                        </td>\r\n                    </tr>\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        );\r\n        const today = Date.now();\r\n        var date = dateFormat(today, \"ddd mmm dS, yyyy\");\r\n        return (\r\n            <div>\r\n                <div style={{clear: \"right\", marginBottom: \"50px\", marginRight: \"450px\"}}>\r\n                    <label>TODAY'S GAMES ({date})</label>\r\n                </div>\r\n                <div>{allGames}</div>\r\n            </div>\r\n        )\r\n    }\r\n    \r\n    componentDidMount(){\r\n        this.retrieveGames();\r\n    }\r\n}\r\nexport default GameStats;","import React from 'react';\nimport PlayerStats from './nbalivestats/PlayerStats.jsx'\nimport GameStats from './nbalivestats/GameStats.jsx'\nimport './App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div style = {{marginBottom: \"100px\"}}>\n        <PlayerStats></PlayerStats>\n      </div>  \n      <div>\n        <GameStats></GameStats>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}